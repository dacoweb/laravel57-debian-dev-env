************** Client Credentials Grant Type ************
#1 Use client credentials grant to protect routes:
    Register Middleware:
    'client.credentials' => \Laravel\Passport\Http\Middleware\CheckClientCredentials::class,

#2 use client.credentials on controllers &/or methods to protect... (retrieve access token will be available just for those specific methods).
    e.g:
    public function __construct() 
    {
        ...
        $this->middleware('client.credentials')->only(['index', 'show']);
    ...

#3 Create a new client using client credentials:
    php artisan passport:client

    Testing:
    postman: send post to oauth/token with
    grant_type=client_credentials
    client_id=#
    client_secret=?

    xpected Result: get a valid access_token.

    to use the access token do (postman):
    send post request with authorization headers:
    - Authorization: Bearer {access_token}

#4 Protect all the routes with authetication api passport (Parent or abstract controller):
    public function __construct()
    {
        $this->middleware('auth:api');
    }

#5 To exclude controller operation already protected by client credentials, example on child controller with constructor:
    $this->middleware('auth:api')->except(['method protected with client credentials, or specials methods/routes']);

